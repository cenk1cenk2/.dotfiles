# vim:ft=swayconfig

### Variables
#
# Logo key. Use Mod1 for Alt and Mod4 for Super.
set $mod Mod4

# background
set $background $HOME/.dotfiles/sway/.config/sway/background/narli.jpg

# set $alt_tab workspace back_and_forth
set $alt_tab exec swayr switch-to-urgent-or-lru-window &> /tmp/swayr.log
set $super_tab exec swayr switch-window &> /tmp/swayr.log

set $focus_after_move true

# Your preferred terminal emulator
# set $term $HOME/.config/sway/scripts/foot.sh
set $term kitty
set $term_float kitty --class="floating_shell"
set $term_float_portrait kitty --class="floating_shell_portrait"
set $term_float_portrait_lg kitty --class="floating_shell_portrait_lg"
# set $term_float footclient -a floating_shell -W 100x35
# set $term_float_portrait footclient -a floating_shell_portrait -W 35x100

# Your preferred application launcher
set $menu rofi -modi "run,drun" run -show drun -terminal $term -ssh-command "{terminal} {ssh-client} {host} [-p {port}]" -run-shell-command "{terminal} {cmd}"

# clipboard history
set $clipboard cliphist list | rofi -dmenu -font "$gui-font-big" -lines 10 -width 35 | cliphist decode | wl-copy

### Lockscreen configuration
set $locking swaylock --daemonize --color "$selection-color" --inside-color "$selection-color" --inside-clear-color "$text-color" --ring-color "$color2" --ring-clear-color "$color11" --ring-ver-color "$color13" --show-failed-attempts --fade-in 0.2 --grace 0.5 --effect-vignette 0.5:0.5 --effect-blur 7x5 --ignore-empty-password --screenshots --clock

###Notification daemon configuration
set $notifications swaync
# --font "$gui-font" --text-color "$text-color" --border-color "$accent-color" --background-color "$background-color" --border-size 3 --width 400 --height 200 --padding 20 --margin 20 --default-timeout 15000

set $shutdown [[ "$(pgrep -x waylogout)" ]] && pkill waylogout || waylogout

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
set $idle swayidle -w \
    timeout 300 'light -G > /tmp/brightness && light -S 10' resume 'light -S $([ -f /tmp/brightness ] && cat /tmp/brightness || echo 100%)' \
    # timeout 600 'exec $locking' \
    timeout 1800 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'playerctl pause'
    # before-sleep 'exec $locking'

# statusbar command
set $waybar_position bottom

# bluetooth command
set $network_manager $term_float nmtui
set $bluetooth $term_float bluetuith
set $audio_mixer $term_float wiremix
# calendar application
set $calendar $term_float ikhal
set $process_manager $term_float_portrait_lg btop

# get-volume commands
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'

# help command
set $help $HOME/.config/sway/scripts/help.sh

# workspace names
set $ws1 number 1
set $ws2 number 2
set $ws3 number 3
set $ws4 number 4
set $ws5 number 5
set $ws6 number 6
set $ws7 number 7
set $ws8 number 8
set $ws9 number 9
set $ws10 number 10

# screenshot
set $grimshot $HOME/.config/sway/scripts/grimshot.sh
set $screenshot_screen_clipboard $grimshot --notify copy output
set $screenshot_screen_file $grimshot --notify save output
set $screenshot_selection_clipboard $grimshot --notify copy area
set $screenshot_selection_file $grimshot --notify save area
set $screenshot_window_clipboard $grimshot --notify copy active
set $screenshot_window_file $grimshot --notify save active
set $screenshot_snipping_tool swappy -f -
set $screenshot_upload $HOME/.config/sway/scripts/upload-image.sh

# onscreen bar
set $onscreen_bar swayosd-client --monitor "$(swaymsg -t get_outputs | jq -r '.[] | select(.focused == true).name')"

# brightness control
set $brightness_up $onscreen_bar --brightness raise
set $brightness_down $onscreen_bar --brightness lower

# audio control
set $volume_up $onscreen_bar --output-volume raise
set $volume_down $onscreen_bar --output-volume lower
set $volume_mute $onscreen_bar --output-volume mute-toggle
set $mic_mute $onscreen_bar --input-volume mute-toggle

# playerctl
set $player_toggle $onscreen_bar --player spotify --playerctl=play-pause
set $player_next $onscreen_bar --player spotify --playerctl=next
set $player_prev $onscreen_bar --player spotify --playerctl=previous

set $recorder $HOME/.config/sway/scripts/recorder.py

set $tablet_map_to_output swaymsg input type:tablet_tool map_to_output $(swaymsg -t get_outputs | jq -r '.[] | select(.focused == true) | .name')
